//Create a superclass called Shape with an abstract method calculateArea() that returns the area of the shape. Implement subclasses Rectangle, Circle, and Triangle that 
//inherit from the Shape class. Implement the calculateArea() method in each subclass to calculate and return the area of a rectangle, circle, and triangle, respectively. 
//Then, create a class called ShapeCalculator with a method printArea(Shape shape) that accepts an object of type Shape and prints its area. Demonstrate polymorphism by 
//passing instances of different subclasses to the printArea() method.



import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Rectangle r=new Rectangle(3,4);
		Circle c=new Circle(4.5);
		Triangle t =new Triangle(2,4);
		
		ShapeCalculator sc=new ShapeCalculator();
		sc.printArea(r);
		sc.printArea(c);
		sc.printArea(t);
		
	}
}
class Shape
{
    public double calculateArea()
    {
        return 0;
    }
 
}
class Rectangle extends Shape
{
    private double length;
    private double breadth;
    
    public Rectangle(double length,double breadth)
    {
        this.length=length;
        this.breadth=breadth;
    }
    
    public double calculateArea()
    {
        return length*breadth;
    }
}
class Circle extends Shape
{
    private double radius;
    
    public Circle(double radius)
    {
        this.radius=radius;
    }
    
    public double calculateArea()
    {
        return Math.PI * radius * radius;
    }
}
class Triangle extends Shape
{
    private double base;
    private double height;

    public Triangle(double base, double height) {
        this.base = base;
        this.height = height;
    }
    public double calculateArea()
    {
        return 0.5* base * height;
    }
    
}

class ShapeCalculator
{
    public void printArea(Shape shape)
    {
        System.out.println("Area of " + shape + " is : " + shape.calculateArea());
    }
}
